---
import type { TargetContent } from "../src";
import Component from "./parts/Component.astro";
import SwitchResult from "./parts/SwitchResult.astro";
import TriggerButton from "./parts/TriggerButton.astro";
import MessageForm from "./forms/MessageForm.astro";
import FeelbackForm from "./FeelbackForm.astro";

type Props = TargetContent & {
  layout?: "button-switch" | "button-dialog" | "inline";
  title?: string;
  label?: string;
  minLength?: number;
  maxLength?: number;
  textAnswer?: string;
  placeholder?: string;
  withEmail?: boolean | "optional" | "required";
};

const {
  layout = "inline",
  label = "Send feedback",
  title = "Send feedback",
  textAnswer = "Thanks for your feedback",
  placeholder = "Type your message",
  minLength,
  maxLength,
  withEmail,
  ...target
} = Astro.props;

const behavior = layout === "button-dialog" ? "dialog" : layout === "button-switch" ? "switch" : undefined;

const formAttrs = {
  title,
  placeholder,
  minLength,
  maxLength,
  withEmail,
};

const btnCancelAttrs =
  layout === "button-switch"
    ? {
        "data-behavior-action": "switch",
        "data-behavior-target": ".trigger-btn",
        "data-behavior-source": ".feelback-form",
      }
    : {
        "data-behavior-action": "cancel",
      };
---

{
  (layout === "button-dialog" || layout === "button-switch") && (
    <Component component="form" class={`feelback-message layout-${layout}`} behavior={behavior} {...target}>
      <SwitchResult textAnswer={textAnswer}>
        <TriggerButton
          action={layout === "button-dialog" ? "dialog" : "switch"}
          target=".feelback-form"
          label={label}
        />
        <MessageForm {...formAttrs} class={`hidden${layout === "button-dialog" ? " dialog" : ""}`}>
          <slot name="before-message" slot="before-message" />
          <slot name="before-email" slot="before-email" />
          <slot name="before-form-buttons" slot="before-form-buttons" />
          <button slot="btn-cancel" class="feelback-btn btn-cancel" title="Cancel" {...btnCancelAttrs}>
            Cancel
          </button>
        </MessageForm>
      </SwitchResult>
    </Component>
  )
}

{
  layout === "inline" && (
    <FeelbackForm class="feelback-message layout-inline" textAnswer={textAnswer} {...target}>
      <MessageForm {...formAttrs}>
        <slot name="before-message" slot="before-message" />
        <slot name="before-email" slot="before-email" />
        <slot name="before-form-buttons" slot="before-form-buttons" />
      </MessageForm>
    </FeelbackForm>
  )
}
