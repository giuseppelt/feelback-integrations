---
import type { FeelbackValueDefinition, TargetContent } from "../src";
import Component from "./parts/Component.astro";
import SwitchResult from "./parts/SwitchResult.astro";
import TriggerButton from "./parts/TriggerButton.astro";
import TaggedMessageForm, { PresetName } from "./forms/TaggedMessageForm.astro";
import FeelbackForm from "./FeelbackForm.astro";
import RadioGroupForm from "./forms/RadioGroupForm.astro";
import { getPreset } from "./presets";

type Style =
  | "align-center" //
  | `width-${"sm" | "md"}` //
  | "bordered";

type Props = TargetContent & {
  style?: Style | Style[];
  layout?:
    | "button-switch"
    | "button-dialog"
    | "button-switch-radio-group"
    | "button-dialog-radio-group"
    | "inline"
    | "reveal-message"
    | "radio-group";
  preset?: PresetName | readonly FeelbackValueDefinition[];
  items?: readonly FeelbackValueDefinition[];
  title?: string;
  label?: string;
  showLabels?: boolean;
  minLength?: number;
  maxLength?: number;
  textAnswer?: string;
  placeholder?: string;
  preselect?: string | number | boolean;
  withEmail?: boolean | "required" | "optional";
};

const {
  style: _style,
  layout = "inline",
  label = "Send feedback",
  title = "Send feedback",
  textAnswer = "Thanks for your feedback",
  placeholder = "Type your message",
  preset: _preset = "feedback",
  items: _items,
  minLength,
  maxLength,
  showLabels,
  preselect,
  withEmail,
  ...target
} = Astro.props;

const style = Array.isArray(_style) ? _style.join(" ") : _style;
const behavior = layout === "button-dialog" ? "dialog" : layout === "button-switch" ? "switch" : undefined;

const formAttrs = {
  preset: _items || _preset,
  title,
  placeholder,
  minLength,
  maxLength,
  showLabels,
  withEmail,
  preselect: preselect === true ? undefined : preselect,
};

const items = Array.isArray(formAttrs.preset) ? formAttrs.preset : getPreset(formAttrs.preset as string);

const btnCancelAttrs =
  layout === "button-switch" || layout === "button-switch-radio-group"
    ? {
        "data-behavior-action": "switch",
        "data-behavior-target": ".trigger-btn",
        "data-behavior-source": ".feelback-form",
      }
    : {
        "data-behavior-action": "cancel",
      };
---

{
  (layout === "button-dialog" ||
    layout === "button-switch" ||
    layout === "button-switch-radio-group" ||
    layout === "button-dialog-radio-group") && (
    <Component
      component="form"
      class={`feelback-tagged-message layout-${layout} ${style || ""}`}
      behavior={behavior}
      {...target}
    >
      <SwitchResult textAnswer={textAnswer}>
        <TriggerButton
          action={layout === "button-dialog" || layout === "button-dialog-radio-group" ? "dialog" : "switch"}
          target=".feelback-form"
          label={label}
        />
        {(layout === "button-switch-radio-group" || layout === "button-dialog-radio-group") && (
          <RadioGroupForm
            items={items}
            class={`hidden${layout === "button-dialog-radio-group" ? " dialog" : ""}`}
            withMessage
            {...formAttrs}
          >
            <button slot="btn-cancel" class="feelback-btn btn-cancel" title="Cancel" {...btnCancelAttrs}>
              Cancel
            </button>
          </RadioGroupForm>
        )}
        {(layout === "button-dialog" || layout === "button-switch") && (
          <TaggedMessageForm {...formAttrs} class={`hidden${layout === "button-dialog" ? " dialog" : ""}`}>
            <button slot="btn-cancel" class="feelback-btn btn-cancel" title="Cancel" {...btnCancelAttrs}>
              Cancel
            </button>
          </TaggedMessageForm>
        )}
      </SwitchResult>
    </Component>
  )
}

{
  layout === "reveal-message" && (
    <Component
      component="form"
      class={`feelback-tagged-message layout-${layout} ${style || ""}`}
      behavior={behavior}
      {...target}
    >
      <SwitchResult textAnswer={textAnswer}>
        <TaggedMessageForm layout="reveal" {...formAttrs} />
      </SwitchResult>
    </Component>
  )
}

{
  layout === "inline" && (
    <FeelbackForm class={`feelback-tagged-message layout-${layout} ${style || ""}`} textAnswer={textAnswer} {...target}>
      <TaggedMessageForm {...formAttrs} />
    </FeelbackForm>
  )
}

{
  layout === "radio-group" && (
    <FeelbackForm class={`feelback-tagged-message layout-${layout} ${style || ""}`} textAnswer={textAnswer} {...target}>
      <RadioGroupForm items={items} withMessage {...formAttrs} />
    </FeelbackForm>
  )
}
