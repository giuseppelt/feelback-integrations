---
import Form from "../parts/Form.astro";
import FieldLongText from "../parts/FieldLongText.astro";
import { FeelbackValueDefinition } from "../../src/types";
import FieldText from "../parts/FieldText.astro";

interface Props {
  items: readonly FeelbackValueDefinition<string>[];
  class?: string;
  title?: string;
  placeholder?: string | false;
  minLength?: number;
  maxLength?: number;
  withMessage?: boolean;
  withEmail?: boolean | "required" | "optional";
}

const {
  items,
  class: className,
  title = "Send feedback",
  placeholder = "Type your message",
  minLength,
  maxLength,
  withMessage,
  withEmail,
} = Astro.props;

const group = `group-${Math.random().toString().substring(2, 7)}`;
---

<Form class={className} title={title} alignButton="left">
  <fieldset class="feelback-radio-group">
    {
      items.map(({ value, title, description }) => (
        <div class="feelback-radio-item-wrap">
          <div class="feelback-radio-item">
            <input id={`${group}-${value}`} name="tag" type="radio" value={value} data-feelback-field />
            <div class="feelback-radio-side">
              {title && <label for={`${group}-${value}`}>{title}</label>}
              {description && <span class="feelback-text">{description}</span>}
            </div>
          </div>
        </div>
      ))
    }
  </fieldset>
  {
    withMessage && (
      <>
        <slot name="before-message" />
        <FieldLongText name="message" {...{ placeholder, minLength, maxLength }} />
      </>
    )
  }
  {
    withEmail && (
      <>
        <slot name="before-email" />
        <FieldText
          name="email"
          type="email"
          asMetadata="$user"
          required={withEmail === "required"}
          placeholder={`your@email.com${withEmail !== "required" ? " (optional)" : ""}`}
        />
      </>
    )
  }

  <slot name="before-form-buttons" slot="before-form-buttons" />
  <slot name="btn-cancel" slot="btn-cancel" />
</Form>
