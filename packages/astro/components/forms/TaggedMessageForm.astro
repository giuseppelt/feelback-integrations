---
import Form from "../parts/Form.astro";
import FieldLongText from "../parts/FieldLongText.astro";
import FieldButtonValueList, { Props as ButtonListProps } from "../parts/FieldButtonValueList.astro";
import type { FeelbackValueDefinition } from "../../src";
import FieldText from "../parts/FieldText.astro";

export type PresetName = "feeling" | "like-dislike" | "feedback" | "evaluation";

interface Props {
  layout?: "inline" | "reveal";
  preset: PresetName | readonly FeelbackValueDefinition[];
  class?: string;
  title?: string;
  placeholder?: string | false;
  placeholderEmail?: string | false;
  showLabels?: boolean;
  minLength?: number;
  maxLength?: number;
  preselect?: number | string | false;
  withEmail?: boolean | "required" | "optional";
}

const {
  layout = "inline",
  class: className,
  preset,
  title = "Send feedback",
  placeholder = "Type your message",
  minLength,
  maxLength,
  showLabels,
  preselect,
  withEmail,
  placeholderEmail,
} = Astro.props;

const buttonListProps: ButtonListProps = {
  name: "tag",
  value: preselect === false ? undefined : preselect,
  preset,
  showLabels,
};
---

<Form class={className} title={layout === "reveal" ? undefined : title} revealButtons={layout === "reveal"}>
  {
    layout === "reveal" ? (
      <div class="feelback-q">
        {title && <span class="feelback-text">{title}</span>}
        <FieldButtonValueList {...buttonListProps} reveal=".form-reveal" />
      </div>
    ) : (
      <FieldButtonValueList {...buttonListProps} />
    )
  }

  {
    Astro.slots.has("before-message") && (
      <div class={layout === "reveal" ? "hidden form-reveal" : undefined}>
        <slot name="before-message" />
      </div>
    )
  }
  <FieldLongText
    class={layout === "reveal" ? "hidden form-reveal" : undefined}
    name="message"
    {...{ placeholder, minLength, maxLength }}
  />

  {
    withEmail && (
      <>
        {Astro.slots.has("before-email") && (
          <div class={layout === "reveal" ? "hidden form-reveal" : undefined}>
            <slot name="before-email" />
          </div>
        )}
        <FieldText
          name="email"
          type="email"
          asMetadata="$user"
          class={layout === "reveal" ? "hidden form-reveal" : undefined}
          required={withEmail === "required"}
          placeholder={placeholderEmail || undefined}
        />
      </>
    )
  }

  <slot name="before-form-buttons" slot="before-form-buttons" />
  <slot name="btn-cancel" slot="btn-cancel" />
</Form>
